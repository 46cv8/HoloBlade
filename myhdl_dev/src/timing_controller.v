// File: timing_controller.v
// Generated by MyHDL 0.11
// Date: Tue Apr  7 10:56:23 2020


`timescale 1ns/10ps

module timing_controller (
    fpga_clk,
    reset_all,
    num_words_in_buffer,
    line_of_data_available,
    next_frame_rdy_o
);
// Ports
// I/O pins:
// --------
// Control:
// fpga_clk                 : clock to drive this module
// reset_all                : Output reset line for all other modules
// DC32-FIFO Side:
// num_words_in_buffer      : How many words of data are in the DC32-FIFO, used to determine whether or not there is an entire line of data available
// Bluejay Data Interface:
// line_of_data_available   : Flag to indicate to the bluejay FSM that there is at least a line of data available in the FIFO currently (ie: more than 40 words)
// next_frame_rdy_o         : This line drives frame updates in current bluejay FSM implementation

input fpga_clk;
output reset_all;
reg reset_all;
input [4:0] num_words_in_buffer;
output line_of_data_available;
reg line_of_data_available;
output next_frame_rdy_o;
reg next_frame_rdy_o;

reg [1:0] state;
reg [7:0] state_timeout_counter;



always @(num_words_in_buffer) begin: TIMING_CONTROLLER_CHECK_LINE_AVAILABLE
    if ((num_words_in_buffer >= 40)) begin
        line_of_data_available = 1'b1;
    end
    else begin
        line_of_data_available = 1'b0;
    end
end


always @(posedge fpga_clk) begin: TIMING_CONTROLLER_RUN_TIMING
    reset_all <= 1'b0;
    next_frame_rdy_o <= 1'b0;
    case (state)
        2'b00: begin
            reset_all <= 1'b1;
            state_timeout_counter <= (state_timeout_counter - 1);
            if ((state_timeout_counter == 1)) begin
                state <= 2'b01;
            end
        end
        2'b01: begin
            next_frame_rdy_o <= 1;
            state <= 2'b10;
        end
        2'b10: begin
            state <= 2'b10;
        end
    endcase
end

endmodule
